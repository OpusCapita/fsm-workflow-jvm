apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: mainpage
  labels:
    app.kubernetes.io/name: mainpage
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/auth-signin: https://$host/oauth2/opuscapita-azuread/start?rd=$escaped_request_uri
    nginx.ingress.kubernetes.io/auth-url: https://$host/oauth2/opuscapita-azuread/auth
    cert-manager.io/cluster-issuer: "default"
spec:
  tls:
    - hosts:
        - {{ .Values.ingress.host }}
      secretName: {{ .Values.ingress.host }}-tls
  rules:
    - host: {{ .Values.ingress.host }}
      http:
        paths:
          - path: {{ .Values.ingress.path }}
            backend:
              serviceName: mainpage
              servicePort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: mainpage
  labels:
    app.kubernetes.io/name: mainpage
spec:
  type: ClusterIP
  ports:
    - port: 80
  selector:
    app.kubernetes.io/name: mainpage
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: mainpage
  labels:
    app.kubernetes.io/name: mainpage
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mainpage
    spec:
      containers:
      - name: mainpage
        image: nginx:alpine
        imagePullPolicy: IfNotPresent
        env:
        - name: NGINX_HOST
          value: "{{ .Values.ingress.host }}"
        - name: NGINX_PORT
          value: "80"
        resources:
          requests:
            cpu: 10m
            memory: 24Mi
          limits:
            cpu: 30m
            memory: 32Mi
        ports:
        - name: http
          containerPort: 80
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          readOnly: true
          name: config-volume
      volumes:
      - name: config-volume
        configMap:
          name: mainpage-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mainpage-config
data:
  index.html: |
{{- include "mainpage.html" . | nindent 4 }}
