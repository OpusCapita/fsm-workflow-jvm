version: 2.1

orbs:
  git: opuscapita/git@volatile

aliases:
  - &restore_cache
    keys:
      - v1-fsm4j-{{ .Branch }}-{{ checksum "core/pom.xml" }}-{{ checksum "editor/package.json" }}-{{ checksum "history/grails-app/conf/BuildConfig.groovy" }}
      - v1-fsm4j-{{ .Branch }}
      - v1-fsm4j

  - &save_cache
    key: v1-fsm4j-{{ .Branch }}-{{ checksum "core/pom.xml" }}-{{ checksum "editor/package.json" }}-{{ checksum "history/grails-app/conf/BuildConfig.groovy" }}
    paths:
      - ~/.m2/repository
      - editor/node_modules

setup_docker: &setup_docker
  docker:
    - image: opuscapita/fsm4j:ci
      environment:
        JAVA_OPTS: -Xms2g -Xmx2g
      auth:
        username: $DOCKER_USER
        password: $DOCKER_PASS
  working_directory: ~/build

jobs:
  init:
    docker:
      - image: opuscapita/minsk-core-machineuser-env:2
    steps:
      - run:
          name: Inject secrets from vault to CircleCI project's environment
          command: circle_ci_add_env.sh

  build-docker-ci:
    docker:
    - image: docker
    steps:
      - run: apk add --no-cache bash make git openssh
      - checkout
      - run: wget -O /vault.zip https://releases.hashicorp.com/vault/1.2.2/vault_1.2.2_linux_amd64.zip; unzip /vault.zip -d /usr/bin/
      - setup_remote_docker
      - run:
          name: Check if image build is required
          command: |
            make docker-auth
            if [ -z "$(git show --name-only | grep build/docker/ci)" ]; then
              DOCKER_CLI_EXPERIMENTAL=enabled docker manifest inspect opuscapita/fsm4j:ci && \
                circleci step halt || echo "Image doesn't exist, proceed"
            fi
      - run: make build-docker-ci && make publish-docker-ci

  build:
    <<: *setup_docker
    steps:
      - git/checkout-with-submodules
      - restore_cache: *restore_cache
      - run: make deploy
      - setup_remote_docker
      - run: make build-docker
      - run: make publish-docker
      - save_cache: *save_cache

  deploy-demo:
    <<: *setup_docker
    steps:
      - git/checkout-with-submodules
      - run: if [ -z "$CIRCLE_TAG" ]; then make deploy-demo CI_BUILD_URL=${CIRCLE_BUILD_URL}; fi

workflows:
  version: 2
  commit:
    jobs:
      - init:
          filters:
            tags:
              only: /.*/
      - build-docker-ci:
          filters:
            tags:
              only: /.*/
          requires:
            - init
      - build:
          filters:
            tags:
              only: /.*/
          requires:
            - init
            - build-docker-ci
      - deploy-demo:
          filters:
            tags:
              only: /.*/
          requires:
            - init
            - build-docker-ci
            - build
